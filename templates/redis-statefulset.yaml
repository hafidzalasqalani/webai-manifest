apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    kompose.cmd: C:\Users\hafid\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -c -o zeroai --namespace zeroai
    kompose.version: 1.37.0 (fb0539e64)
  labels:
    io.kompose.service: redis
  name: redis
  namespace: zeroai
spec:
  serviceName: "redis"
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: redis
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\hafid\AppData\Local\Microsoft\WinGet\Packages\Kubernetes.kompose_Microsoft.Winget.Source_8wekyb3d8bbwe\kompose.exe convert -c -o zeroai --namespace zeroai
        kompose.version: 1.37.0 (fb0539e64)
      labels:
        io.kompose.service: redis
    spec:
      containers:
        - args:
            - redis-server
            - --appendonly
            - "yes"
          image: redis:7.2
          name: redis-webai
          ports:
            - containerPort: 6379
              protocol: TCP
          volumeMounts:
            - mountPath: /data
              name: redis-data
      restartPolicy: Always
      volumes:
        - name: redis-data
          hostPath:
            path: /mnt/data/redis  # path di node, ganti sesuai kebutuhan
            type: DirectoryOrCreate
  # volumeClaimTemplates:
  #   - metadata:
  #       name: redis-data
  #       labels:
  #         io.kompose.service: redis-claim0
  #     spec:
  #       accessModes: ["ReadWriteOnce"]
  #       resources:
  #         requests:
  #           storage: 100Mi
